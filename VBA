Chapter 2: Variables



1. Declare variable "myStr" as a string variable type.
Sub Macro1()

Dim myStr as string

End Sub



2. Set variable j equal to 2
Sub Macro1()
  Dim j as long

j = 2

End Sub



3. Add 1 to the variable j.

Sub Macro1()
  Dim j as long
  j = 2

j = j + 1

End Sub



4. Set cell A1 equal to the variable j.

Sub Macro1()
  Dim j as long
  j = 2
  j = j + 1

range("A1").value = j

End Sub



5. Declare a variable (i) that will allow you to store a large number (ex. 443,439)

Sub Macro1()

dim i as long

End Sub



6. Declare a variable (i) that will allow you to store a decimal number (ex. 54.33)

Sub Macro1()

dim i as Double

End Sub



7. Assign the string of text "this is a string" to the variable "strTest"

Sub Macro1()
  Dim strTest as string

strTest = "this is a string"

End Sub



8. Set the variable "strTest" equal to the value of cell A1

Sub Macro1()
  Dim strTest as string

strTest = range("A1").value  

End Sub



9. Set the variable "Flag" equal to FALSE.

Sub Macro1()
  Dim Flag as Boolean

Flag = FALSE

End Sub



10. Switch the variable "Flag".

Sub Macro1()
  Dim Flag as Boolean

Flag = Not Flag

End Sub



11. Assign the workbook "Example.xlsm" to the variable "myWB".

Sub Macro1()
  Dim myWB as Workbook

set myWB = Workbooks("Example.xlsm") 

End Sub



12. Assign the worksheet "data" to the variable "myWS". Don't define a workbook.

Sub Macro1()
  Dim myWS as Worksheet

set myWS = Worksheets("data")

End Sub



13. Assign this workbook (where the code is stored) to variable curWB

Sub Macro1()
  Dim curWB as Workbook

set curWb = ThisWorkbook 

End Sub



14. Assign the active worksheet to the variable myWS.

Sub Macro1()
  Dim myWS as Worksheet

set myWS = ActiveSheet

End Sub



15. Set the active cell value to 5.

Sub Macro1()

Activecell.value = 5

End Sub



16. Declare a string variable called "strWS" and give it the value "2017_12".

Sub Macro1()
  Dim strWS as String

strWS = "2017_12"

End Sub



17. Set strWS equal to named range "date". Then set cell "A1" on sheet strWS equal to 1.

Sub Macro1()
  Dim strWS As String

strWS = Range("date").Value
Sheets(strWS).Range("A1").Value = 1

End Sub



--------------



Chapter 3: Conditional Logic: If and Select Cases




1. Test if 5 is less than or equal to 3 and assign the result to the variable "Test"

Sub Macro1()
  Dim Test as Boolean

test = 5 <=  3

End Sub




2. Make the declaration allowing you to compare text, while ignoring case.

Option Compare Text 




3. Now compare "String" and "string" and assign the result to the variable "test".

Option Compare Text
Sub Macro1()

test  = "String" = "string"

End Sub




4. Test if variable "string1" does not equal variable "string2"

Option Compare Text
Sub Macro1()

test = string1 <> string2

End Sub




5. Test if n > 100 with an IF Statement. Set note = "check" if TRUE else note = "immaterial"

Sub Macro1()

If n > 100 then
   note = "Check"
else
   note = "immaterial"
End if

End Sub




6. Test if a number n is less than or equal to 3 or greater than or equal to 10 by using the "Or" operator.

Sub Macro1()

If (n <= 3) or (n >= 10) then  

    'do something
  End If
End Sub




7. Add another Elseif to the previous example to test if animal = "Cow". If TRUE then create a message box that says "Moo".

Sub Macro1()
  If animal = "cat" Then
    MsgBox "Meow"
  ElseIf animal = "Dog" Then
    MsgBox "Woof"

Elseif animal = "Cow" Then
MsgBox "Moo"

  Else
    MsgBox "*Crickets*"
  End If
End Sub





8. Use a Select Case statement to test if variable "animal" is equal to "cat" or "dog" and output "meow" or "woof" to the variable "sound" if there is a match.

Sub Macro1()

Select Case animal
Case cat: Sound = "meow"
Case dog: Sound = "woof"
End Select





End Sub




--------------




Chapter 4: Loops




1. Create a For loop to repeat a task 5 times using the variable i. Your answer should be two lines.

Sub Macro1()

for i = 1 to 5
Next i

End Sub




2. Use a For loop to start at 100 and end at 0, decreasing by 10 each step.

Sub Macro1()

For i = 100 to 0 step -10
Next i


End Sub



3. Loop through each worksheet in a workbook and set range "A1" of each worksheet equal to the worksheet name.

Sub Macro1()
  Dim ws as Worksheet

For each ws in Worksheets
ws.range("A1").Value = ws.Name  
 Next ws



4. Loop through each cell in range "a1:a100" and set each cell's value equal to the cell directly to its right.

Sub Macro1()
  Dim cell as Range

For Each cell in Range ("A1:A100")
cell.Value = cell.Offset(0,1).Value  
next cell




5. Use a Do loop to repeat a task only while variable testvalue > 100.

Sub Macro1()

Do
while testvalue > 100
Loop

End Sub



Chapter 5: Advanced Cells, Rows, Columns and Sheets



1. Get the row number of named range "drate" and assign it to a variable "row_num".

Sub Macro1()
  Dim row_num as Long

row_num = range("drate").row

End Sub



2. Get the column number of named range "drate" and assign it to variable "col_num".

Sub Macro1()

col_num = range("drate").Column

End Sub




3. Delete Columns "H:I".

Sub Macro1()

Columns("H:I").delete

End Sub



4. Insert a row after row 3

Sub Macro1()

Rows(4).insert

End Sub




5. Insert a row below range "C4" using "EntireRow".

Sub Macro1()

range("C5").EntireRow.insert

End Sub



6. Unhide columns B and C.

Sub Macro1()

Columns("b:c").hidden = false

End Sub



7. Count the number of cells in range "import_data" and assign the result to variable "n".

Sub Macro1()
  Dim n as Long

n = range("import_data").count

End Sub



8. Copy range "B3" to range "C3"

Sub Macro1()

Range ("B3").Copy Range ("C3")

End Sub



9. Copy range "A1" and paste formats to range "B1"

Sub Macro1()

Range("A1").Copy
Range("B1").PasteSpecial Paste:= xlPasteFormats

End Sub



10. Use the range object and R1C1 style referencing to refer to cell "D4".

Sub Macro1()

range("R4C4")

End Sub



11. Use the cells object to assign the value of 4 to cell "E2".

Sub Macro1()

cells(2,5) = 4

End Sub



12. Find the last used column in the active worksheet and assign it to variable "lcol"

Sub Macro1()

lcol = ActiveSHEET.USEDRANGE.COLUMN

End Sub



13. Find the last used column in row 1 (hint start with cell "AZ1").

Sub Macro1()

range("AZ1").End(xlToLeft).column

End Sub



14. Select cell "B2" by offsetting from cell "D5"

Sub Macro1()

range("D5").offset(-3,-2).select

End Sub



Sub Macro1()

range("A2").resize(4,2).select

End Sub



16. Set the formulaR1C1 property of range "B1:B10" to equal cell "C8".

Sub Macro1()

range("B1:B10").formulaR1C1 = "=R8C3"

End Sub



17. Set the formulas in range "B1:B5" to equal the cell directly to the left (Hint: Use negative 1)

Sub Macro1()

range("B1:B5").formulaR1C1 = "=RC[-1]"

End Sub



18. Select the cell one column to the right of the Activecell.

Sub Macro1()

Activecell.Offset(0,1).select

End Sub



19. Unhide sheet "data".

Sub Macro1()

sheets("data").visible = TRUE

End Sub



20. Make sheet "Data" very hidden

Sub Macro1()

sheets("Data").visible =xlSheetVeryHidden 

End Sub



21. Rename sheet "inputs" to "Start Here".

Sub Macro1()

sheets("inputs").name = "Start HERe"

End Sub



22. Unprotect the worksheet named "calcs" with the password "abc123".

Sub Macro1()

sheets("calcs").unprotect "abc123"

End Sub




Chapter 6: Message boxes and Input Boxes
 
 
############################################
############################################
############################################








